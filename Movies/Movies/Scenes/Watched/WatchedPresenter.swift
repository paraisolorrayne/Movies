//
//  WatchedPresenter.swift
//  Movies
//
//  Created by Lorrayne Paraiso  on 30/10/18.
//  Copyright (c) 2018 Lorrayne Paraiso. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol WatchedPresentationLogic {
    func presentFetchFromDataStoreResult(with response: WatchedModels.FetchFromDataStore.Response)
    func presentWatchedResult(with response: WatchedModels.Watched.Response)
}

class WatchedPresenter: WatchedPresentationLogic {
    weak var viewController: WatchedDisplayLogic?

    // MARK: Use Case - Fetch Data From DataStore

    func presentFetchFromDataStoreResult(with response: WatchedModels.FetchFromDataStore.Response) {
        let viewModel = WatchedModels.FetchFromDataStore.ViewModel(userAttribute: response.userAttribute)
        viewController?.displayFetchFromDataStoreResult(with: viewModel)
    }  

    // MARK: Use Case - Watched

    func presentWatchedResult(with response: WatchedModels.Watched.Response) {
        let viewModel = WatchedModels.Watched.ViewModel(containsErrors: response.containsErrors, genericErrorMessage: response.genericErrorMessage, variablePassed: response.variablePassed)
        viewController?.displayWatchedResult(with: viewModel)
    }
}
